name: fd

services:
  redis:
    restart: always
    image: redis:8.0.3
    container_name: redis
    command: redis-server --requirepass $REDIS_PASSWORD
    environment:
      - REDISCLI_AUTH=$REDIS_PASSWORD
    ports:
      - "${EXPOSE_REDIS_PORT:-}:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli PING | grep PONG || (redis-cli PING && exit 1)" ]
      interval: 5s
      timeout: 5s
      retries: 3
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - redis_data:/data

  postgres:
    restart: always
    image: postgres:16.3
    container_name: postgres
    environment:
      - POSTGRES_DB=$DB_DATABASE
      - POSTGRES_USER=$DB_USERNAME
      - POSTGRES_PASSWORD=$DB_PASSWORD
    ports:
      - "${EXPOSE_POSTGRES_PORT:-}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 3
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - postgres_data:/var/lib/postgresql/data

  app:
    image: cosmtrek/air
    container_name: app
    working_dir: /src
    ports:
      - $PORT:$PORT
    env_file: .env
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./bin:/src/bin
      - ./cmd:/src/cmd
      - ./internal:/src/internal
      - ./web:/src/web
      - ./go.mod:/src/go.mod
      - ./go.sum:/src/go.sum
      - ./Makefile:/src/Makefile
      - ./.air.toml:/src/.air.toml
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    image: golang:1.24-alpine
    container_name: worker
    command: [ "true" ]
    env_file: .env
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./bin:/src/bin
    depends_on:
      postgres:
        condition: service_healthy

  backup:
    image: golang:1.24-alpine
    container_name: backup
    command: [ "sh", "-c", "apk update && apk add postgresql16-client && tail -f /dev/null" ]
    env_file: .env
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./bin:/src/bin
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  redis_data:
  postgres_data:
